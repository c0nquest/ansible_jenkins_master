---
# Some sections taken from  https://github.com/geerlingguy/ansible-role-jenkins
#


# tasks file for jenkins-master
- name: Add jenkins repository
  yum_repository:
    name: jenkins
    file: jenkins
    description: Jenkins YUM repo
    baseurl: "{{ jenkins_down_url }}"


- name: Import a key from a url
  ansible.builtin.rpm_key:
    state: present
    key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key

- name: Install a list of packages epel java jenkins
  yum:
    name:
      - epel-release
      - java-11-openjdk-devel
      - jenkins
    state: present

- name: Check if jenkins_init_file exists.
  stat:
    path: "{{ jenkins_init_file }}"
  register: jenkins_init_file_stat

- name: Ensure jenkins_init_file exists.
  file:
    path: "{{ jenkins_init_file }}"
    state: touch
    mode: 0644
  when: not jenkins_init_file_stat.stat.exists

- name: Modify variables in init file.
  lineinfile:
    dest: "{{ jenkins_init_file }}"
    insertafter: '^{{ item.option }}='
    regexp: '^{{ item.option }}=\"\${{ item.option }} '
    line: '{{ item.option }}="${{ item.option }} {{ item.value }}"'
    state: present
    mode: 0644
  with_items: "{{ jenkins_init_changes }}"
  register: jenkins_init_prefix

- name: Ensure jenkins_home {{ jenkins_home }} exists.
  file:
    path: "{{ jenkins_home }}"
    state: directory
    owner: jenkins
    group: jenkins
    mode: u+rwx
    follow: true

- name: Set the Jenkins home directory.
  lineinfile:
    dest: "{{ jenkins_init_file }}"
    regexp: '^JENKINS_HOME=.*'
    line: 'JENKINS_HOME={{ jenkins_home }}'
    mode: 0644
  register: jenkins_home_config

- name: Create custom init scripts directory.
  file:
    path: "{{ jenkins_home }}/init.groovy.d"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0775

- name: configure admin user
  template:
    src: basic-security.groovy.j2
    dest: "{{ jenkins_home }}/init.groovy.d/basic-security.groovy"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0775
  register: jenkins_users

# Make sure Jenkins starts, then configure Jenkins.
- name: Ensure Jenkins is started and runs on startup.
  service: name=jenkins state=started enabled=yes

- name: Get the jenkins-cli jarfile from the Jenkins server.
  get_url:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins_jar_location }}"
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or '304' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: 5
  delay: 10
  check_mode: false

# Need to restart jenkins

# Remove the script to add admin user
- name: Remove Jenkins security init scripts after first startup.
  file:
    path: "{{ jenkins_home }}/init.groovy.d/basic-security.groovy"
    state: absent
