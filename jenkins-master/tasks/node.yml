---
# REF: https://www.netexpertise.eu/en/devops/ansible/register-a-jenkins-slave-with-ansible.html
# https://wiki.jenkins.io/display/JENKINS/Distributed+builds

# Set the home directory to the same as the jenkins install path, this is useful when using ssh keys and cloud provider cli's
# 
- name: Add the jenkins node user
  user:
    name: "{{ jenkins_node_user }}"
    comment: Jenkins node user
    group: "{{ jenkins_node_group }}"
    home: "{{ jenkins_node_path }}"

- name: Ensure jenkins_home {{ jenkins_node_path }} exists.
  file:
    path: "{{ jenkins_node_path }}"
    state: directory
    owner: "{{ jenkins_node_user }}"
    group: "{{ jenkins_node_group }}"
    mode: '0755'
    follow: true

- name: Download agent.jar
  get_url:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/jnlpJars/agent.jar"
    dest: "{{ jenkins_node_path }}/agent.jar"
    mode: '0644'

# Create a new crumb, this is not required if CSFR has been unticked in the console
- name: Generate a new crumb
  uri:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/crumbIssuer/api/json"
    body_format: json
    force_basic_auth: yes
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_pass }}"
    status_code: 200
    return_content: yes
  register: crumbdata

# Generate new token using above crumb and use jsessionid in cookie
- name: Generate Token 
  uri:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/user/{{ jenkins_admin_user }}/descriptorByName/jenkins.security.ApiTokenProperty/generateNewToken"
    body_format: form-urlencoded
    body:
      newTokenName: "{{ jenkins_token_name }}"
    method: POST
    force_basic_auth: yes
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_pass }}"
    status_code: 200
    return_content: yes
    headers:
      Cookie: "{{ crumbdata.cookies_string }}"
      Jenkins-Crumb: "{{ crumbdata.json.crumb }}"
  register: tokendata

- name: create node on Jenkins master
  uri:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/computer/doCreateItem?name={{ jenkins_node_name }}&type=hudson.slaves.DumbSlave"
    method: POST
    body_format: form-urlencoded
    force_basic_auth: yes
    user: "{{ jenkins_admin_user }}"
    password: "{{ tokendata.json.data.tokenValue }}"
    body: "json={{ lookup('template', 'config.json.j2', convert_data=False) }}"
    return_content: yes
    status_code: 200, 302, 400
    headers:
      Cookie: "{{ crumbdata.cookies_string }}"
      Jenkins-Crumb: "{{ crumbdata.json.crumb }}"
  register: nodedata

- name: get node page content
  uri:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/computer/{{jenkins_node_name}}/slave-agent.jnlp"
    method: POST
    body_format: form-urlencoded
    force_basic_auth: yes
    user: "{{ jenkins_admin_user }}"
    password: "{{ tokendata.json.data.tokenValue }}"
    return_content: yes
    status_code: 200
  register: agentdata

# requires the following install
# ansible-galaxy collection install community.general
# pip3 install --upgrade lxml
#- name: get secret from xml
#  xml:
#    xmlstring: "{{agentdata.content}}"
#    xpath: /jnlp/application-desc/argument
#    content: text
#  register: data06

- name: get secret from xml
  shell: echo "{{agentdata.content}}" | awk -F"argument>" '{print $2}' | cut -d'<' -f1
  register: xmlout
  args:
    creates: /etc/sysconfig/jenkins-node

- name: get node list in json
  uri:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/computer/api/json?tree=computer[displayName]"
#    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/computer/api/xml"
    force_basic_auth: yes
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_pass }}"
    status_code: 200
    return_content: yes
    headers:
      Cookie: "{{ crumbdata.cookies_string }}"
      Jenkins-Crumb: "{{ crumbdata.json.crumb }}"
  register: nodelistdata


# NEED TO CHANGE data06
# jenkins_node_secret: "{{data06.matches[0].argument}}"
- name: Copy jenkins-node default file template
  template:
    src: jenkins-node-default.j2
    dest: "/etc/sysconfig/jenkins-node"
    owner: "{{ jenkins_node_user }}"
    group: "{{ jenkins_node_group }}"
    mode: 0600
  vars:
    jenkins_node_secret: "{{ xmlout.stdout }}"
  register: jenkins_config

- name: Copy jenkins-node init file template
  template:
    src: jenkins-node-init.j2
    dest: "/etc/init.d/jenkins-node"
    owner: "{{ jenkins_node_user }}"
    group: "{{ jenkins_node_group }}"
    mode: 0744
  register: jenkins_init



# For security purposes, remove the newly created token
- name: Delete Token
  uri:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/user/{{ jenkins_admin_user }}/descriptorByName/jenkins.security.ApiTokenProperty/revoke"
    body_format: form-urlencoded
    body:
      tokenUuid: "{{ tokendata.json.data.tokenUuid }}"
    method: POST
    force_basic_auth: yes
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_pass }}"
    status_code: 200
    return_content: yes
    headers:
      Cookie: "{{ crumbdata.cookies_string }}"
      Jenkins-Crumb: "{{ crumbdata.json.crumb }}"
  register: revokedata

- name: Start service jenkins-node, if not started
  service: 
    name: jenkins-node
    state: started
    enabled: yes

- name: Print returned json dictionary
  debug:
    var: crumbdata.json

- name: Print certain element
  debug:
    var: tokendata.json

- name: Print certain element 1
  debug:
    var: revokedata

- name: Print certain element 1
  debug:
    var: nodedata

- name: Print certain element 1
  debug:
    var: agentdata

- name: Print certain element 1
  debug:
    var: xmlout

- name: Print certain element 1
  debug:
    var: nodelistdata  | upper
  when: "'test044' not in nodelistdata.content | lower"

